name: Фикс

on:
    workflow_dispatch:
        inputs:
            release_version:
                description: 'Version of the release'
                required: true

jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20.14.0'
            - run: npm install
            - run: npm run lint

    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20.14.0'
            - run: npm install
            - run: npm test

    fix:
        runs-on: ubuntu-latest
        needs: [lint, test]

        steps:
            - uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20.14.0'
            - name: Build Docker image
              run: npm run build:docker
            - name: Log in to Yandex Container Registry
              run: echo "${{ secrets.YANDEX_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
            - name: Tag and Push Docker images to Yandex Container Registry
              run: |
                  docker tag shri-task:latest cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
                  docker tag shri-task:latest cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_latest
                  docker push cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
                  docker push cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_latest
            - name: Set up Git user
              run: |
                  git config --global user.email "dolgonosov.konstantin@yandex.ru"
                  git config --global user.name "Konstantin"
            - name: Create Fix Tag
              run: |
                  git tag -a v${{ github.event.inputs.release_version }}_fix${{ github.run_number }} -m "Fix Release ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}"
                  git push origin --tags
            - name: Set Date
              run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

            - name: Get previous tag
              run: echo "PREVIOUS_TAG=$(expr ${{ github.run_number }} - 1)" >> $GITHUB_ENV
            - name: Get commits
              run: |
                  git fetch
                  git branch --set-upstream-to origin/releases/${{ github.run_number }}
                  echo "COMMITS=$(git log $PREVIOUS_TAG..HEAD --pretty=format:'%h %s')" >> $GITHUB_ENV
            - name: Add Fix Comment to Issue
              run: |
                  issue_number=$(gh issue list --label release-${{ github.event.inputs.release_version }} --json number --jq '.[0].number')
                  gh issue comment "$issue_number" --body "$BODY"
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  BODY: |
                      ### Fix Release ${{ github.event.inputs.release_version }}_fix${{ github.run_number }} applied.
                      **Дата:** ${{ env.CURRENT_DATE }}
                      **Автор фикса:** ${{ github.actor }}
                      **Номер версии:** ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
                      **Коммиты:** ${{ env.COMMITS }}
                      **Docker образ:** [Ссылка](http://cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }})
