name: Задеплоить релиз
run-name: Деплоится ${{ github.event.inputs.release_version }} релиз

on:
    workflow_dispatch:
        inputs:
            release_version:
                description: 'Version of the release'
                required: true

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Log in to Yandex Container Registry
              run: echo "${{ secrets.YANDEX_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

            - name: Check if image exists in Yandex Container Registry
              run: |
                  if ! docker manifest inspect cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_latest; then
                    echo "Image not found!" && exit 1
                  fi

            - name: SSH and deploy to prod
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.PROD_SERVER_HOST }}
                  username: ${{ secrets.PROD_SERVER_USER }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: ${{ secrets.PROD_SERVER_PORT}}
                  script: |
                      echo "Logging in to Yandex Container Registry"
                      echo "${{ secrets.YANDEX_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
                      echo "Pulling the latest Docker image"
                      docker pull cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_latest
                      echo "Stopping and removing old container"
                      docker stop dockerone || true
                      docker rm dockerone || true
                      echo "Running the new Docker image"
                      docker run -d --name dockerone -p 3000:3000 cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_latest

            - name: Set Date
              run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Update Issue with deployment information
              run: |
                  issue_number=$(gh issue list --label release-${{ github.event.inputs.release_version }} --json number --jq '.[0].number')
                  gh issue comment "$issue_number" --body "$BODY"
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  BODY: |
                      ### Release ${{ github.event.inputs.release_version }} deployed to production.
                      **Дата деплоя:** ${{ env.CURRENT_DATE }}
                      **Автор деплоя:** ${{ github.actor }}
                      **Docker образ:** [Ссылка](http://cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.event.inputs.release_version }}_latest)
