name: Создать релиз
run-name: Формируется релиз
on: [workflow_dispatch]

jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20.14.0'
            - run: npm install
            - run: npm run lint

    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20.14.0'
            - run: npm install
            - run: npm test

    build_and_push:
        runs-on: ubuntu-latest
        needs: [lint, test]

        steps:
            - uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20.14.0'
            - name: Build Docker image
              run: npm run build:docker
            - name: Log in to Yandex Container Registry
              run: echo "${{ secrets.YANDEX_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
            - name: Tag and Push Docker images to Yandex Container Registry
              run: |
                  docker tag shri-task:latest cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.run_number }}
                  docker tag shri-task:latest cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.run_number }}_latest
                  docker push cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.run_number }}
                  docker push cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.run_number }}_latest
            - name: Set up Git user
              run: |
                  git config --global user.email "dolgonosov.konstantin@yandex.ru"
                  git config --global user.name "Konstantin"
            - name: Create Release Branch and Tag
              run: |
                  git checkout -b releases/${{ github.run_number }}
                  git push origin releases/${{ github.run_number }}
                  git tag -a v${{ github.run_number }} -m "Release ${{ github.run_number }}"
                  git push origin --tags
            - name: Get previous tag
              run: echo "PREVIOUS_TAG=v$(expr ${{ github.run_number }} - 1)" >> $GITHUB_ENV
            - name: Get commits
              run: |
                  git fetch --tags
                  echo git log --pretty=format:"%h %s" $PREVIOUS_TAG..HEAD
                  echo "COMMITS=$(git log --pretty=format:"%h %s" $PREVIOUS_TAG..HEAD)" >> $GITHUB_ENV
            - name: Set Date
              run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
            - name: Create Release Label
              run: |
                  gh label create "release-${{ github.run_number }}" --color "#0E8A16" || echo "Label already exists"
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Create Release Issue
              run: |
                  gh issue create \
                    --title "$TITLE" \
                    --body "$BODY" \
                    --label "$LABELS"
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TITLE: 'Release ${{ github.run_number }}'
                  BODY: |
                      ### Release ${{ github.run_number }} created.
                      **Дата:** ${{ env.CURRENT_DATE }}
                      **Автор релиза:** ${{ github.actor }}
                      **Номер версии:** ${{ github.run_number }}
                      **Коммиты:** ${{ env.COMMITS }}
                      **Docker образ:** [Ссылка](http://cr.yandex/crpr13vub4nq44mp9r6u/app:${{ github.run_number }}_latest)
                  LABELS: release-${{ github.run_number }}
            - name: Update Changelog
              run: |
                  git log --pretty=format:"%h %s" $PREVIOUS_TAG..HEAD
                  echo "## Release ${{ github.run_number }} - $(date)" > temp_CHANGELOG.md
                  echo >> temp_CHANGELOG.md
                  git log --pretty=format:"%h %s" $PREVIOUS_TAG..HEAD >> temp_CHANGELOG.md
                  echo >> temp_CHANGELOG.md
                  echo "Current CHANGELOG.md content:"
                  cat CHANGELOG.md
                  cat CHANGELOG.md >> temp_CHANGELOG.md
                  mv temp_CHANGELOG.md CHANGELOG.md
                  echo "Updated CHANGELOG.md content:"
                  cat CHANGELOG.md
                  git add CHANGELOG.md
                  git commit -m "Update CHANGELOG for release ${{ github.run_number }}"
                  git push origin releases/${{ github.run_number }}

    branch_and_pull_request:
        runs-on: ubuntu-latest
        needs: build_and_push

        steps:
            - name: Checkout main branch
              uses: actions/checkout@v4
              with:
                  ref: main
            - name: Checkout release branch
              uses: actions/checkout@v4
              with:
                  ref: releases/${{ github.run_number }}
            - name: Create Pull Request
              run: |
                  gh pr create \
                    --title "Update CHANGELOG for release ${{ github.run_number }}" \
                    --body "This PR updates the CHANGELOG.md file for release ${{ github.run_number }}." \
                    --base main \
                    --head releases/${{ github.run_number }}
              env:
                  GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
            - name: Merge Pull Request
              run: |
                  pr_number=$(gh pr list --base main --head releases/${{ github.run_number }} --json number --jq '.[0].number')
                  gh pr merge $pr_number --admin --squash
              env:
                  GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
